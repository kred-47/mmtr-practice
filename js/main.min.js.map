{"version":3,"sources":["classes.js","constants.js","helpers.js","main.js","screen-keyboard.js"],"names":["textAreaElement","document","getElementById","lengthData","wordsData","withoutSpacesData","tableData","TextArea","_classCallCheck","this","addEventListener","onKeyUp","value","length","trim","split","join","firstChild","removeChild","tableDataObj","_toConsumableArray","reduce","a","e","arrForTable","table","arr","i","tr","createElement","j","td","innerHTML","appendChild","fillTable","arrWithHeaders","Languages","RU","generateId","object","now","Date","concat","Math","round","random","ScreenKeyboard","inputSelector","blockSelector","props","screenKeyboardBlock","toggleKeyboardElement","language","window","navigator","currentInput","querySelector","blockInput","buttons","configKeyboard","lines","columns","style","width","justifyContent","isFunc","localeData","en","ru","alt","isActive","type","icon","_this$screenKeyboardB","element","createKeyboard","render","handleToggleKeyboard","bind","closeKeyboard","iconKeyboard","dragAndDrop","_this","_this$screenKeyboardE","map","item","renderLine","append","result","screenKeyboardElement","console","log","_this2","lineElement","classList","add","Array","isArray","config","forEach","renderButton","renderColumn","_config$style","_this3","columnElement","button","Button","_objectSpread","onClick","currentLanguage","push","id","find","toggleShiftAlt","includes","content","actionButton","shiftActive","active","toUpperCase","altContent","alternative","setRangeText","selectionStart","selectionEnd","focus","renderContent","Set","dataShiftAlt","changeLayout","setAttribute","panel","initX","initY","firstX","firstY","dragIt","event","left","btnShiftAlt","pageX","pageY","preventDefault","removeEventListener","first","second","_this4","EN","onShowKeyboard","onToggleKeyboard","remove","changeLanguage","parent","_this5","_defineProperty","Boolean","onToggle","createButton","locale","keyElement","toggle","mainContent","arrayContent","_this$keyElement","apply","reduceLongWord","handleClick"],"mappings":"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","file":"main.min.js","sourcesContent":["const textAreaElement = document.getElementById('js-input');\r\nconst lengthData = document.getElementById(\"length\");\r\nconst wordsData = document.getElementById('number_of_words');\r\nconst withoutSpacesData = document.getElementById('without_spaces');\r\nconst tableData = document.getElementById('table-percent');\r\n\r\nclass TextArea {\r\n    constructor() {\r\n        textAreaElement.addEventListener(\"keyup\", this.onKeyUp);\r\n    }\r\n\r\n    onKeyUp() {\r\n        lengthData.value = textAreaElement.value.length;\r\n        wordsData.value = textAreaElement.value === '' ? 0 : textAreaElement.value.trim().split(' ').length;\r\n        withoutSpacesData.value = textAreaElement.value.trim().split(' ').join('').length;\r\n\r\n        while (tableData.firstChild && tableData.removeChild(tableData.firstChild));\r\n\r\n        const tableDataObj = [...textAreaElement.value].reduce((a, e) => {\r\n            a[e] = a[e] ? a[e] + 1 : 1;\r\n            return a}, {});\r\n\r\n        const arrForTable = Object.entries(tableDataObj);\r\n        const arrWithHeaders = [['Символ', 'Процент'], ...arrForTable];\r\n\r\n        fillTable(tableData, arrWithHeaders);\r\n\r\n        function fillTable(table, arr) {\r\n            for (let i = 0; i < arr.length; i++) {\r\n                const tr = document.createElement('tr');\r\n\r\n                for (let j = 0; j < arr[i].length; j++) {\r\n                    const td =document.createElement('td');\r\n                    td.innerHTML = arr[i][j];\r\n\r\n                    tr.appendChild(td);\r\n                }\r\n                table.appendChild(tr);\r\n            }\r\n        }\r\n    }\r\n}\r\n","const Languages = {\r\n    RU: 'ru',\r\n    EN: 'en'\r\n}","function generateId(object) {\r\n    const now = Date.now();\r\n\r\n    return `${object}-${now}-${Math.round(Math.random() * now)}`\r\n}","document.addEventListener('DOMContentLoaded', () => {\r\n    new TextArea();\r\n\r\n    new ScreenKeyboard({\r\n        inputSelector: '#js-input',\r\n        blockSelector: '#textarea-block'\r\n    });\r\n\r\n    new ScreenKeyboard({\r\n        inputSelector: '#js-small-input',\r\n        blockSelector: '#input-block'\r\n    });\r\n});","class ScreenKeyboard {\r\n    constructor(props) {\r\n        this.screenKeyboardBlock = document.getElementById('js-keyboard-block');\r\n        this.toggleKeyboardElement = document.getElementById('toggle-keyboard');\r\n        this.language = window.navigator.language.split('-')[0];\r\n        this.currentInput = document.querySelector(props?.inputSelector);\r\n        this.blockInput = document.querySelector(props?.blockSelector)\r\n\r\n        this.buttons = [];\r\n        this.configKeyboard = {\r\n            lines: [ // the whole keyboard - line\r\n                {\r\n                    columns: [ // columns that can have only lines\r\n                        {\r\n                            style: {\r\n                                width: '80%',\r\n                                justifyContent: 'end'\r\n                            },\r\n                            lines: [ // lines that can have buttons or columns\r\n                                {\r\n                                    style: {\r\n                                        justifyContent: 'start'\r\n                                    },\r\n                                    buttons: [ // buttons that can be only in line\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Esc',\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: '`', ru: 'ё'},\r\n                                            alt: {\r\n                                                en: '~',\r\n                                                ru: 'ё'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: '1',\r\n                                            alt: {\r\n                                                en: '!',\r\n                                                ru: '!'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: '2',\r\n                                            alt: {\r\n                                                en: '@',\r\n                                                ru: '\"'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: '3',\r\n                                            alt: {\r\n                                                en: '#',\r\n                                                ru: '№'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: '4',\r\n                                            alt: {\r\n                                                en: '$',\r\n                                                ru: ';'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: '5',\r\n                                            alt: {\r\n                                                en: '%',\r\n                                                ru: '%'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: '6',\r\n                                            alt: {\r\n                                                en: '^',\r\n                                                ru: ':'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: '7',\r\n                                            alt: {\r\n                                                en: '&',\r\n                                                ru: '?'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: '8',\r\n                                            alt: {\r\n                                                en: '*',\r\n                                                ru: '*'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: '9',\r\n                                            alt: {\r\n                                                en: '(',\r\n                                                ru: '('\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: '0',\r\n                                            alt: {\r\n                                                en: ')',\r\n                                                ru: ')'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: '-',\r\n                                            alt: {\r\n                                                en: '_',\r\n                                                ru: '_'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: '=',\r\n                                            alt: {\r\n                                                en: '+',\r\n                                                ru: '+'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Backspace',\r\n                                            type: 'backspace',\r\n                                            icon: 'icon-cancel-alt',\r\n                                        },\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    style: {\r\n                                        justifyContent: 'start'\r\n                                    },\r\n                                    buttons: [\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Tab',\r\n                                            type: 'tab',\r\n                                            icon: 'icon-exchange',\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'q', ru: 'й'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'w', ru: 'ц'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'e', ru: 'у'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'r', ru: 'к'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 't', ru: 'е'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'y', ru: 'н'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'u', ru: 'г'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'i', ru: 'ш'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'o', ru: 'щ'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'p', ru: 'з'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: '[', ru: 'х'},\r\n                                            alt: {\r\n                                                en: '{',\r\n                                                ru: 'х'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: ']', ru: 'ъ'},\r\n                                            alt: {\r\n                                                en: '}',\r\n                                                ru: 'ъ'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: '\\\\',\r\n                                            alt: {\r\n                                                en: '|',\r\n                                                ru: '/'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Del',\r\n                                            type: 'del',\r\n                                        },\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    style: {\r\n                                        justifyContent: 'start'\r\n                                    },\r\n                                    buttons: [\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Caps',\r\n                                            type: 'caps',\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'a', ru: 'ф'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 's', ru: 'ы'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'd', ru: 'в'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'f', ru: 'а'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'g', ru: 'п'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'h', ru: 'р'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'j', ru: 'о'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'k', ru: 'л'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'l', ru: 'д'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: ';', ru: 'ж'},\r\n                                            alt: {\r\n                                                en: ':',\r\n                                                ru: 'ж'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: \"'\", ru: 'э'},\r\n                                            alt: {\r\n                                                en: '\"',\r\n                                                ru: 'э'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Enter',\r\n                                            type: 'enter',\r\n                                        },\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    style: {\r\n                                        justifyContent: 'start'\r\n                                    },\r\n                                    buttons: [\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Shift',\r\n                                            type: 'l-shift',\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'z', ru: 'я'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'x', ru: 'ч'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'c', ru: 'с'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'v', ru: 'м'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'b', ru: 'и'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'n', ru: 'т'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: 'm', ru: 'ь'},\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: ',', ru: 'б'},\r\n                                            alt: {\r\n                                                en: '<',\r\n                                                ru: 'б'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: '.', ru: 'ю'},\r\n                                            alt: {\r\n                                                en: '>',\r\n                                                ru: 'ю'\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: {en: '/', ru: '.'},\r\n                                            alt: {\r\n                                                en: '?',\r\n                                                ru: ','\r\n                                            },\r\n                                            isActive: false,\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Up',\r\n                                            icon: 'icon-up-open',\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Shift',\r\n                                            type: 'r-shift',\r\n                                        },\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    style: {\r\n                                        justifyContent: 'start'\r\n                                    },\r\n                                    buttons: [\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Fn',\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Ctrl',\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Win',\r\n                                            type: 'button-win',\r\n                                            icon: 'icon-win8',\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Alt',\r\n                                        },\r\n                                        {\r\n                                            isFunc: false,\r\n                                            localeData: ' ',\r\n                                            type: 'space',\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Alt',\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Ctrl',\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Left',\r\n                                            icon: 'icon-left-open',\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Down',\r\n                                            icon: 'icon-down-open',\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Right',\r\n                                            icon: 'icon-right-open',\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Menu',\r\n                                            type: 'button-menu',\r\n                                            icon: 'icon-doc-text',\r\n                                        },\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            style: {\r\n                                width: '20%',\r\n                                justifyContent: 'end'\r\n                            },\r\n                            lines: [\r\n                                {\r\n                                    style: {\r\n                                        justifyContent: 'end'\r\n                                    },\r\n                                    buttons: [\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Home',\r\n                                            type: 'right-keys'\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'PgUp',\r\n                                            type: 'right-keys'\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: {en: 'Nav', ru: 'Перейти'},\r\n                                            type: 'right-keys'\r\n                                        },\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    style: {\r\n                                        justifyContent: 'end'\r\n                                    },\r\n                                    buttons: [\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'End',\r\n                                            type: 'right-keys'\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'PgDn',\r\n                                            type: 'right-keys'\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: {en: 'Mv Up', ru: 'Вверх'},\r\n                                            type: 'right-keys'\r\n                                        },\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    style: {\r\n                                        justifyContent: 'end'\r\n                                    },\r\n                                    buttons: [\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Insert',\r\n                                            type: 'right-keys'\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'Pause',\r\n                                            type: 'right-keys'\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: {en: 'Mv Dn', ru: 'Вниз'},\r\n                                            type: 'right-keys'\r\n                                        },\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    style: {\r\n                                        justifyContent: 'end'\r\n                                    },\r\n                                    buttons: [\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'PrtScn',\r\n                                            type: 'right-keys'\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: 'ScrLck',\r\n                                            type: 'right-keys'\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: {en: 'Dock', ru: 'Закрепить'},\r\n                                            type: 'right-keys'\r\n                                        },\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    style: {\r\n                                        justifyContent: 'end'\r\n                                    },\r\n                                    buttons: [\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: {en: 'Options', ru: 'Параметры'},\r\n                                            type: 'right-keys'\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: {en: 'Help', ru: 'Справка'},\r\n                                            type: 'right-keys'\r\n                                        },\r\n                                        {\r\n                                            isFunc: true,\r\n                                            localeData: {en: 'Fade', ru: 'Исчезание'},\r\n                                            type: 'right-keys'\r\n                                        },\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        const element = this.createKeyboard();\r\n\r\n        this.screenKeyboardBlock?.appendChild(element);\r\n\r\n        this.render();\r\n\r\n        this.toggleKeyboardElement.addEventListener('click', this.handleToggleKeyboard.bind(this));\r\n        this.closeKeyboard.addEventListener('click', this.handleToggleKeyboard.bind(this));\r\n        this.iconKeyboard.addEventListener('click', this.handleToggleKeyboard.bind(this));\r\n        this.dragAndDrop();\r\n    }\r\n\r\n    render() {\r\n        if (this.configKeyboard.lines) {\r\n            const result = this.configKeyboard.lines.map(item => this.renderLine(item));\r\n\r\n            this.screenKeyboardElement.append(...result);\r\n            this.screenKeyboardBlock.append(this.screenKeyboardElement);\r\n\r\n            return;\r\n        }\r\n        console.log('\"lines\" not found');\r\n    }\r\n\r\n    renderLine(config) {\r\n        const lineElement = document.createElement('div');\r\n\r\n        lineElement.classList.add('my-screen-keyboard__line');\r\n\r\n        if (Array.isArray(config.buttons)) {\r\n            config.buttons.forEach(item => {\r\n                lineElement.appendChild(this.renderButton(item));\r\n            });\r\n        }\r\n\r\n        if (Array.isArray(config.columns)) {\r\n            config.columns.forEach(item => {\r\n                lineElement.appendChild(this.renderColumn(item));\r\n            });\r\n        }\r\n\r\n        return lineElement;\r\n    }\r\n\r\n    renderColumn(config) {\r\n        const columnElement = document.createElement('div');\r\n\r\n        columnElement.classList.add('my-screen-keyboard__column');\r\n        columnElement.style.width = config.style?.width;\r\n\r\n        if (Array.isArray(config.lines)) {\r\n            config.lines.forEach(item => {\r\n                columnElement.appendChild(this.renderLine(item));\r\n            });\r\n        }\r\n\r\n        return columnElement;\r\n    }\r\n\r\n    renderButton(config) {\r\n        const button = new Button({\r\n            ...config,\r\n            onClick: this.onClick.bind(this),\r\n            currentLanguage: this.language,\r\n        });\r\n\r\n        this.buttons.push(button);\r\n\r\n        return button.render();\r\n    }\r\n\r\n    onClick(id) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        const button = this.buttons.find(item => item.id === id);\r\n        const pressedButtons = ['Shift', 'Alt', 'Caps', 'Fn', 'Ctrl', 'Win'];\r\n\r\n        this.toggleShiftAlt(button);\r\n\r\n        if (button?.isFunc && pressedButtons.includes(button.content)) {\r\n            this.buttons.forEach(item => {\r\n                if (item.content === button.content) {\r\n                    item.toggleActive();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.actionButton(button);\r\n    }\r\n\r\n    actionButton(button) {\r\n        const shiftActive = this.buttons.filter(item => 'Shift' === item.content && item.active);\r\n        const content = !button.isFunc && button.isActive ? button.content.toUpperCase() : button.content;\r\n        const altContent = !button.isFunc && button.isActive && button.alt ? button.alternative.toUpperCase() : button.alternative;\r\n\r\n        if (!button.isFunc) {\r\n            if (shiftActive.length > 0 && button.alt) {\r\n                this.currentInput.setRangeText(altContent, this.currentInput.selectionStart,\r\n                    this.currentInput.selectionEnd, 'end');\r\n                this.currentInput.focus();\r\n\r\n                return;\r\n            }\r\n\r\n            this.currentInput.setRangeText(content, this.currentInput.selectionStart,\r\n                this.currentInput.selectionEnd, 'end');\r\n            this.currentInput.focus();\r\n        }\r\n\r\n        if (button.content === 'Shift' || button.content === 'Caps') {\r\n            this.buttons.forEach(item => {\r\n                item.isActive === false ? item.isActive = true : item.isActive = false;\r\n                item.renderContent();\r\n            });\r\n        }\r\n\r\n        if (button.content === 'Backspace') {\r\n            if (this.currentInput.selectionStart === this.currentInput.selectionEnd) {\r\n                return this.currentInput.setRangeText('', this.currentInput.selectionStart - 1,\r\n                    this.currentInput.selectionStart, 'end');\r\n            }\r\n\r\n            this.currentInput.setRangeText(\r\n                '', this.currentInput.selectionStart, this.currentInput.selectionEnd, 'end'\r\n            );\r\n\r\n        }\r\n\r\n        if (button.content === 'Del') {\r\n            if (this.currentInput.selectionStart === this.currentInput.selectionEnd) {\r\n                return this.currentInput.setRangeText('', this.currentInput.selectionStart,\r\n                    this.currentInput.selectionStart + 1, 'end');\r\n            }\r\n\r\n            this.currentInput.setRangeText(\r\n                '', this.currentInput.selectionStart, this.currentInput.selectionEnd, 'end'\r\n            );\r\n        }\r\n    }\r\n\r\n    toggleShiftAlt(button) {\r\n        const btnShiftAlt = this.buttons.filter(item => ['Shift', 'Alt'].includes(item.content) && item.active);\r\n        const dataShiftAlt = btnShiftAlt.map(item => item.localeData);\r\n        const arrShiftAlt = [...new Set(dataShiftAlt)];\r\n\r\n        if (arrShiftAlt.length === 2 && button.content === 'Shift') {\r\n            this.changeLayout('Shift', 'Alt');\r\n        }\r\n    }\r\n\r\n    createKeyboard() {\r\n        this.screenKeyboardElement = document.createElement('div');\r\n        this.screenKeyboardElement.classList.add('my-screen-keyboard', 'hidden-screen-keyboard');\r\n        this.screenKeyboardElement.setAttribute('draggable', 'true');\r\n        this.screenKeyboardElement.setAttribute('id', generateId('keyboard'));\r\n\r\n        const panel = document.createElement('div');\r\n\r\n        panel.classList.add('my-screen-keyboard__panel');\r\n        panel.innerHTML = 'Screen keyboard';\r\n\r\n        this.screenKeyboardElement.append(panel);\r\n\r\n        this.closeKeyboard = document.createElement('button');\r\n        this.closeKeyboard.classList.add('my-screen-keyboard__close');\r\n        this.closeKeyboard.innerHTML = 'close';\r\n\r\n        panel.append(this.closeKeyboard);\r\n\r\n        this.createIcon(this.blockInput);\r\n\r\n        return this.screenKeyboardElement;\r\n    }\r\n\r\n    dragAndDrop() {\r\n        const object = document.getElementById(this.screenKeyboardElement.id);\r\n\r\n        let initX;\r\n        let initY;\r\n        let firstX;\r\n        let firstY;\r\n\r\n        object.addEventListener('mousedown', function(event) {\r\n            event.preventDefault();\r\n\r\n            initX = this.offsetLeft;\r\n            initY = this.offsetTop;\r\n            firstX = event.pageX;\r\n            firstY = event.pageY;\r\n\r\n            this.addEventListener('mousemove', dragIt, false);\r\n\r\n            window.addEventListener('mouseup', function() {\r\n                object.removeEventListener('mousemove', dragIt, false);\r\n            }, false);\r\n        }, false);\r\n\r\n        function dragIt(event) {\r\n            this.style.left = initX+event.pageX-firstX + 'px';\r\n            this.style.top = initY+event.pageY-firstY + 'px';\r\n        }\r\n    }\r\n\r\n    changeLayout(first, second) {\r\n        if (\r\n            this.buttons.find(item => item.content === 'Win' && item.active) ||\r\n            this.buttons.find(item => item.content === 'Ctrl' && item.active)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        this.changeLanguage();\r\n\r\n        this.buttons.forEach(item => {\r\n            if (second === item.content) {\r\n                item.toggleActive();\r\n            }\r\n            item.changeLanguage(this.language);\r\n            item.renderContent();\r\n            item.reduceLongWord();\r\n        });\r\n    }\r\n\r\n    changeLanguage() {\r\n        if (this.language === Languages.RU) {\r\n            this.language = Languages.EN;\r\n\r\n            return;\r\n        }\r\n\r\n        if (this.language === Languages.EN) {\r\n            this.language = Languages.RU;\r\n        }\r\n    }\r\n\r\n    handleToggleKeyboard() {\r\n        this.onShowKeyboard();\r\n        this.onToggleKeyboard();\r\n    }\r\n\r\n    onToggleKeyboard() {\r\n        if (this.toggleKeyboardElement.innerHTML.includes('Go print')) {\r\n            this.toggleKeyboardElement.innerHTML = 'Hide keyboard';\r\n\r\n            return;\r\n        }\r\n\r\n        if (this.toggleKeyboardElement.innerHTML.includes('Hide keyboard')) {\r\n            this.toggleKeyboardElement.innerHTML = 'Go print';\r\n        }\r\n    }\r\n\r\n    onShowKeyboard() {\r\n        if (this.screenKeyboardElement.classList.value === 'my-screen-keyboard hidden-screen-keyboard') {\r\n            this.screenKeyboardElement.classList.remove('hidden-screen-keyboard');\r\n\r\n            return;\r\n        }\r\n\r\n        if (this.screenKeyboardElement.classList.value === 'my-screen-keyboard') {\r\n            this.screenKeyboardElement.classList.add('hidden-screen-keyboard');\r\n        }\r\n    }\r\n\r\n    createIcon(parent) {\r\n        this.iconKeyboard = document.createElement('div');\r\n        this.iconKeyboard.classList.add('icon-keyboard');\r\n\r\n        parent.appendChild(this.iconKeyboard);\r\n    }\r\n}\r\n\r\nclass Button {\r\n    constructor(props) {\r\n        this.id = props?.id || generateId('button');\r\n        this.isFunc = Boolean(props?.isFunc);\r\n        this.isActive = Boolean(props?.isActive);\r\n        this.localeData = props?.localeData;\r\n        this.type = props?.type || 'base';\r\n        this.active = Boolean(props?.active);\r\n        this.onClick = props?.onClick;\r\n        this.onToggle = props?.onToggle;\r\n        this.currentLanguage = props?.currentLanguage;\r\n        this.icon = props?.icon;\r\n        this.alt = props?.alt;\r\n\r\n        this.createButton(props);\r\n    }\r\n\r\n    get content() {\r\n        if (typeof this.localeData === \"object\") {\r\n            return this.localeData[this.currentLanguage];\r\n        }\r\n\r\n        return this.localeData;\r\n    }\r\n\r\n    get alternative() {\r\n        if (this.alt) {\r\n            return this.alt[this.currentLanguage];\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        if (typeof this.onClick === 'function') {\r\n            this.onClick(this.id);\r\n        }\r\n    }\r\n\r\n    changeLanguage(locale) {\r\n        this.currentLanguage = locale;\r\n    }\r\n\r\n    toggleActive() {\r\n        this.active = !this.active;\r\n\r\n        this.keyElement.classList.toggle('_active');\r\n    }\r\n\r\n    /*\r\n    'isFunc': if key have 'true' => the 'letter-button' class is added to the button\r\n\r\n    'localeData': key have a text, that is displayed on the button\r\n\r\n    'type': key defines class, that set the shape of the button\r\n\r\n    'active': key allows you to set button 'pressed' state\r\n\r\n    'icon': if the button have this key, the text in the button is not written. The button have only an icon\r\n\r\n    'alt': alternative button's content, for holding \"shift\"\r\n     */\r\n\r\n    get altContent() {\r\n        if (!this.alt) {\r\n            return;\r\n        }\r\n\r\n        const altContent = document.createElement('div');\r\n\r\n        if (!this.isActive) {\r\n            altContent.classList.remove('alt-content--a') || altContent.classList.add('alt-content');\r\n        }\r\n\r\n        if (this.isActive) {\r\n            altContent.classList.add('alt-content--a');\r\n        }\r\n\r\n        altContent.innerHTML = this?.alt[this.currentLanguage];\r\n\r\n        return altContent;\r\n    }\r\n\r\n    get mainContent() {\r\n        const mainContent = document.createElement('div');\r\n\r\n        mainContent.innerHTML = this.content;\r\n\r\n        if (this.alt && this.alt[this.currentLanguage] !== this.content) {\r\n            if (!this.isActive) {\r\n                mainContent.classList.remove('content--b') || mainContent.classList.add('content');\r\n            }\r\n\r\n            if (this.isActive) {\r\n                mainContent.classList.add('content--b');\r\n            }\r\n\r\n            return mainContent;\r\n        }\r\n\r\n        if (!this.isFunc && this.isActive) {\r\n            mainContent.innerHTML = this.content.toUpperCase();\r\n        }\r\n\r\n        mainContent.classList.add('one-content');\r\n\r\n        return mainContent;\r\n    }\r\n\r\n    renderContent() {\r\n        if (!this.icon) {\r\n            const altContent = this.alt ? this.altContent : null;\r\n            const mainContent = this.mainContent;\r\n            const arrayContent = [];\r\n\r\n            if (this.alt && this.alt[this.currentLanguage] !== this.content) {\r\n                arrayContent.push(altContent, mainContent);\r\n            } else {\r\n                arrayContent.push(mainContent);\r\n            }\r\n\r\n            while (this.keyElement.firstChild) {\r\n                this.keyElement.removeChild(this.keyElement.firstChild);\r\n            }\r\n\r\n            this.keyElement.append(...arrayContent);\r\n        }\r\n    }\r\n\r\n    reduceLongWord() {\r\n        if (this.isFunc) {\r\n            if (this.keyElement.innerText.length > 6) {\r\n                this.keyElement.classList.add('letter-button--s');\r\n\r\n                return;\r\n            }\r\n\r\n            this.keyElement.classList.remove('letter-button--s');\r\n            this.keyElement.classList.add('letter-button');\r\n        }\r\n    }\r\n\r\n    createButton() {\r\n        this.keyElement = document.createElement('div');\r\n        this.keyElement.setAttribute('id', this.id);\r\n        this.keyElement.classList.add('my-screen-keyboard__key', `${this.type}`);\r\n\r\n        this.renderContent();\r\n        this.reduceLongWord();\r\n\r\n        if (this.icon) {\r\n            this.keyElement.classList.add(`${this.icon}`);\r\n        }\r\n\r\n        this.keyElement.addEventListener('click', this.handleClick.bind(this));\r\n    }\r\n\r\n    render() {\r\n        return this.keyElement;\r\n    }\r\n}"]}